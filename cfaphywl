import numpy as np
import matplotlib.pyplot as plt

# Constants
c = 3.00e8  # Speed of light in m/s (approximate)
pi = np.pi

def energy_from_wavelength_and_mass(wavelength, mass, i=1):
    """
    Calculate energy using the formula: E = (-1)(λ^i)mc^2
    """
    return (-1) * (wavelength**i) * mass * c**2

def energy_increase_expression(wavelength, mass, i=1):
    """
    Calculate energy increase using the formula: E = ((λ^i)(mc)(-1)))^2
    """
    return ((wavelength**i) * mass * c * (-1))**2

def energy_equivalency(wavelength, mass, r):
    """
    Calculate energy using the formula: E = mc^2 / (2πr^2)
    """
    return (mass * c**2) / (2 * pi * r**2)

def plot_spectra(wavelengths, intensities, title, xlabel, ylabel):
    """
    Plot energy or absorption spectra.
    """
    plt.plot(wavelengths, intensities)
    plt.title(title)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.grid(True)
    plt.savefig(f"{title.replace(' ', '_')}.png")  # Save as image file
    plt.show()

def carbon_emission_analysis(wavelength_range, mass, r):
    """
    Perform a basic analysis of carbon emissions across a range of wavelengths.
    """
    wavelengths = np.linspace(wavelength_range[0], wavelength_range[1], 500)
    energies = energy_from_wavelength_and_mass(wavelengths, mass)
    increased_energies = energy_increase_expression(wavelengths, mass)
    
    # Plotting the energy and increased energy
    plot_spectra(wavelengths, energies, 'Energy from Wavelength and Mass', 'Wavelength (nm)', 'Energy (J)')
    plot_spectra(wavelengths, increased_energies, 'Energy Increase Expression', 'Wavelength (nm)', 'Increased Energy (J)')
    
    return wavelengths, energies, increased_energies

def main():
    # Parameters for the calculations
    wavelength_range = (400, 800)  # Wavelength range in nm
    mass = 1.0e-26  # Example mass in kg (e.g., mass of a carbon atom)
    r = 1.0  # Example distance or radius in meters
    
    # Perform carbon emission analysis
    wavelengths, energies, increased_energies = carbon_emission_analysis(wavelength_range, mass, r)
    
    # Example calculation using energy equivalency expression
    energy_eq = energy_equivalency(wavelengths[0], mass, r)
    print(f"Energy equivalency for wavelength {wavelengths[0]} nm: {energy_eq:.2e} J")
    
if __name__ == "__main__":
    main()